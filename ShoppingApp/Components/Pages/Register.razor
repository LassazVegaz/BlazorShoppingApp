@page "/register"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@inject IUsersService usersService

<PageTitle>Register</PageTitle>

<h1 class="text-5xl text-center pt-6">Register</h1>

<div class="flex justify-center mt-24">
    <EditForm class="border-4 border-indigo py-8 px-16 rounded-lg flex gap-4 flex-col"
              OnValidSubmit="@Submit"
              Model="@Model"
              FormName="registerform"
    >
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label for="email" class="inline-block w-24 text-lg">Email</label>
            <InputText @bind-Value="@Model.Email" name="email" type="email" class="border-2 border-indigo p-1 px-2 w-[250px]" />
        </div>

        <div>
            <label for="password" class="inline-block w-24 text-lg">Password</label>
            <InputText @bind-Value="@Model.Password" name="password" type="password" class="border-2 border-indigo p-1 px-2 w-[250px]" />
        </div>

        <div class="mt-8 flex justify-center">
            <button type="submit" class="bg-blue-100 p-1 px-4 rounded-md border-blue-200 border-2">Register</button>
        </div>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    RegisterModel Model { get; set; } = new RegisterModel();

    async void Submit()
    {
        var user = new User
        {
            Email = Model.Email,
            Password = Model.Password
        };
        usersService.CreateUser(user);
        await Task.CompletedTask;
    }

    class RegisterModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = null!;

        [Required]
        [MinLength(8, ErrorMessage = "Password must contain at least 8 characters")]
        public string Password { get; set; } = null!;
    }
}