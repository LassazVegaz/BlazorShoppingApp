@page "/register"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@inject IUsersService usersService

<PageTitle>Register</PageTitle>

<MudText Typo="Typo.h3" Align="Align.Center">Register</MudText>

<MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mt-10">
    <MudPaper style="min-width:500px" Class="px-10 py-4">
        <EditForm OnValidSubmit="@Submit" Model="@Model" FormName="registerform">
            <DataAnnotationsValidator />

            <MudStack>
                <MudTextField For="() => Model.Email" @bind-Value="@Model.Email" Label="Email" Required="true" Variant="Variant.Outlined" />
                <MudTextField For="() => Model.Password" @bind-Value="@Model.Password" Label="Password" Required="true" Variant="Variant.Outlined" />
            </MudStack>

            <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mt-10">
                <MudButton Color="Color.Primary" Variant="Variant.Filled">Register</MudButton>
            </MudStack>
        </EditForm>
    </MudPaper>
</MudStack>

@code {
    [SupplyParameterFromForm]
    RegisterModel Model { get; set; } = new RegisterModel();

    async void Submit()
    {
        var user = new User
            {
                Email = Model.Email,
                Password = Model.Password
            };
        usersService.CreateUser(user);
        await Task.CompletedTask;
    }

    class RegisterModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = null!;

        [Required]
        [MinLength(8, ErrorMessage = "Password must contain at least 8 characters")]
        public string Password { get; set; } = null!;
    }
}